// <auto-generated />
using System;
using FinanManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanManager.Migrations
{
    [DbContext(typeof(FinanManagerContext))]
    partial class FinanManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanManager.Models.Accounting", b =>
                {
                    b.Property<int>("AccountingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("accounting_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountingId"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("accountName");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("accountNumber");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("createdBy");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("CreditAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("creditAmount");

                    b.Property<decimal>("DebitAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("debitAmount");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool>("IsReconciled")
                        .HasColumnType("bit")
                        .HasColumnName("isReconciled");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transactionDate");

                    b.HasKey("AccountingId")
                        .HasName("PK__Accounti__19BA3200DED7644F");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Accounting", (string)null);
                });

            modelBuilder.Entity("FinanManager.Models.AlertConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ExceedLimitAlert")
                        .HasColumnType("int");

                    b.Property<int>("NearLimitAlert")
                        .HasColumnType("int");

                    b.Property<decimal>("NearLimitValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.Property<decimal>("SpendingLimit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id")
                        .HasName("PK_AlertConfig");

                    b.HasIndex("RoleId");

                    b.ToTable("AlertConfig", (string)null);
                });

            modelBuilder.Entity("FinanManager.Models.AuditLog", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("audit_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("applicationName");

                    b.Property<string>("ChangedColumns")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("changedColumns");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ipAddress");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("newValues");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oldValues");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("operation");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("reason");

                    b.Property<string>("RecordId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("recordId");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sessionId");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tableName");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("AuditId")
                        .HasName("PK__AuditLog__5AF23A3B1B80755A");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLog", (string)null);
                });

            modelBuilder.Entity("FinanManager.Models.Bienes", b =>
                {
                    b.Property<int>("BienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bien_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BienId"));

                    b.Property<int>("Abril")
                        .HasColumnType("int")
                        .HasColumnName("abril");

                    b.Property<int>("Agosto")
                        .HasColumnType("int")
                        .HasColumnName("agosto");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion")
                        .HasAnnotation("Relational:JsonPropertyName", "descripcionBien");

                    b.Property<int>("Diciembre")
                        .HasColumnType("int")
                        .HasColumnName("diciembre");

                    b.Property<int>("Enero")
                        .HasColumnType("int")
                        .HasColumnName("enero");

                    b.Property<int>("Febrero")
                        .HasColumnType("int")
                        .HasColumnName("febrero");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Julio")
                        .HasColumnType("int")
                        .HasColumnName("julio");

                    b.Property<int>("Junio")
                        .HasColumnType("int")
                        .HasColumnName("junio");

                    b.Property<int>("Marzo")
                        .HasColumnType("int")
                        .HasColumnName("marzo");

                    b.Property<int>("Mayo")
                        .HasColumnType("int")
                        .HasColumnName("mayo");

                    b.Property<decimal>("MontoUnitario")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("montoUnitario");

                    b.Property<string>("MotivoRechazo")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "motivoRechazo");

                    b.Property<int>("Noviembre")
                        .HasColumnType("int")
                        .HasColumnName("noviembre");

                    b.Property<int>("Octubre")
                        .HasColumnType("int")
                        .HasColumnName("octubre");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_ID");

                    b.Property<int>("Septiembre")
                        .HasColumnType("int")
                        .HasColumnName("septiembre");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_ID");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total");

                    b.HasKey("BienId")
                        .HasName("PK__Bienes__53E7FB7B0F7E62AF");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("Bienes");
                });

            modelBuilder.Entity("FinanManager.Models.Cuenta", b =>
                {
                    b.Property<int>("CuentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuentaId"));

                    b.Property<int?>("CuentaMadreId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CuentaId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("FinanManager.Models.FailedLoginAttempt", b =>
                {
                    b.Property<int>("AttemptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attempt_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttemptId"));

                    b.Property<DateTime?>("AttemptDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("attemptDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("userEmail");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_ID");

                    b.HasKey("AttemptId")
                        .HasName("PK__FailedLo__5620F57154470F1C");

                    b.HasIndex("UserId");

                    b.ToTable("FailedLoginAttempts");
                });

            modelBuilder.Entity("FinanManager.Models.Gasto", b =>
                {
                    b.Property<int>("GastoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gasto_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GastoId"));

                    b.Property<int>("Abril")
                        .HasColumnType("int")
                        .HasColumnName("abril");

                    b.Property<int>("Agosto")
                        .HasColumnType("int")
                        .HasColumnName("agosto");

                    b.Property<int>("CuentaHijaId")
                        .HasColumnType("int")
                        .HasColumnName("cuentaHija_ID");

                    b.Property<int>("CuentaMadreId")
                        .HasColumnType("int")
                        .HasColumnName("cuentaMadre_ID");

                    b.Property<int>("Diciembre")
                        .HasColumnType("int")
                        .HasColumnName("diciembre");

                    b.Property<int>("Enero")
                        .HasColumnType("int")
                        .HasColumnName("enero");

                    b.Property<int>("Febrero")
                        .HasColumnType("int")
                        .HasColumnName("febrero");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Julio")
                        .HasColumnType("int")
                        .HasColumnName("julio");

                    b.Property<int>("Junio")
                        .HasColumnType("int")
                        .HasColumnName("junio");

                    b.Property<string>("Justificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("justificacion");

                    b.Property<int>("Marzo")
                        .HasColumnType("int")
                        .HasColumnName("marzo");

                    b.Property<int>("Mayo")
                        .HasColumnType("int")
                        .HasColumnName("mayo");

                    b.Property<string>("MotivoRechazo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Noviembre")
                        .HasColumnType("int")
                        .HasColumnName("noviembre");

                    b.Property<int>("Octubre")
                        .HasColumnType("int")
                        .HasColumnName("octubre");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_ID");

                    b.Property<int>("Septiembre")
                        .HasColumnType("int")
                        .HasColumnName("septiembre");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_ID");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total");

                    b.HasKey("GastoId")
                        .HasName("PK__Gasto__5F5C0E732B01BED9");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("Gasto", (string)null);
                });

            modelBuilder.Entity("FinanManager.Models.Notification", b =>
                {
                    b.Property<int>("NotificationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Notifications_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationsId"));

                    b.Property<string>("NotificationMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notificationMessage");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("notificationType");

                    b.Property<int>("role_ID")
                        .HasColumnType("int")
                        .HasColumnName("role_ID");

                    b.HasKey("NotificationsId")
                        .HasName("PK__Notifica__9688F61C9302D258");

                    b.HasIndex("role_ID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("FinanManager.Models.Presupuesto", b =>
                {
                    b.Property<int>("PresupuestoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PresupuestoId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByNavigationUsers_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PresupuestoId");

                    b.HasIndex("CreatedByNavigationUsers_Id");

                    b.ToTable("Presupuesto");
                });

            modelBuilder.Entity("FinanManager.Models.Proyecto", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("proyecto_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProyectoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MotivoRechazo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_ID");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status_ID");

                    b.Property<decimal>("ValorEstimado")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("valorEstimado");

                    b.Property<string>("ViabilidadComercial")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("viabilidadComercial");

                    b.Property<string>("ViabilidadFinanciera")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("viabilidadFinanciera");

                    b.Property<string>("ViabilidadGestion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("viabilidadGestion");

                    b.Property<string>("ViabilidadImpactoAmbiental")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("viabilidadImpactoAmbiental");

                    b.Property<string>("ViabilidadLegal")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("viabilidadLegal");

                    b.Property<string>("ViabilidadTecnica")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("viabilidadTecnica");

                    b.HasKey("ProyectoId")
                        .HasName("PK__Proyecto__A7383809345897B9");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("FinanManager.Models.Role", b =>
                {
                    b.Property<int>("role_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("role_ID"));

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("role_name");

                    b.HasKey("role_ID")
                        .HasName("PK__Roles__760F9984B55F0625");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FinanManager.Models.SolicitudesRestablecimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("PK__Solicitu__3214EC073E6D05A5");

                    b.ToTable("SolicitudesRestablecimiento", (string)null);
                });

            modelBuilder.Entity("FinanManager.Models.SolicitudesRestablecimientoAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("PK__Solicitu__3214EC07A94A73ED");

                    b.ToTable("SolicitudesRestablecimientoAdmin", (string)null);
                });

            modelBuilder.Entity("FinanManager.Models.StatusPresupuesto", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("statusName");

                    b.HasKey("StatusId")
                        .HasName("PK__statusPr__3680B97982B97846");

                    b.ToTable("statusPresupuesto", (string)null);
                });

            modelBuilder.Entity("FinanManager.Models.User", b =>
                {
                    b.Property<int>("Users_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("users_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Users_Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("lastName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("userEmail");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int")
                        .HasColumnName("userStatus");

                    b.Property<int>("role_ID")
                        .HasColumnType("int")
                        .HasColumnName("role_ID");

                    b.HasKey("Users_Id")
                        .HasName("PK__Users__EAA0ED73A125BD51");

                    b.HasIndex("role_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinanManager.Models.UserRoleChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime");

                    b.Property<int>("NuevoRolId")
                        .HasColumnType("int")
                        .HasColumnName("NuevoRol_ID");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("RolAnteriorId")
                        .HasColumnType("int")
                        .HasColumnName("RolAnterior_ID");

                    b.Property<int>("UsersId")
                        .HasColumnType("int")
                        .HasColumnName("users_ID");

                    b.HasKey("Id")
                        .HasName("PK__UserRole__3214EC07D98963ED");

                    b.ToTable("UserRoleChanges");
                });

            modelBuilder.Entity("FinanManager.Models.Accounting", b =>
                {
                    b.HasOne("FinanManager.Models.User", "CreatedByNavigation")
                        .WithMany("Accountings")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__Accountin__creat__2E1BDC42");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("FinanManager.Models.AlertConfig", b =>
                {
                    b.HasOne("FinanManager.Models.Role", "Role")
                        .WithMany("AlertConfigs")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AlertConfig_Roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinanManager.Models.AuditLog", b =>
                {
                    b.HasOne("FinanManager.Models.User", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__AuditLog__userId__2F10007B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanManager.Models.Bienes", b =>
                {
                    b.HasOne("FinanManager.Models.Role", "Role")
                        .WithMany("Bienes")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_Roles");

                    b.HasOne("FinanManager.Models.StatusPresupuesto", "StatusPresupuesto")
                        .WithMany("Bienes")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_Status");

                    b.Navigation("Role");

                    b.Navigation("StatusPresupuesto");
                });

            modelBuilder.Entity("FinanManager.Models.FailedLoginAttempt", b =>
                {
                    b.HasOne("FinanManager.Models.User", "User")
                        .WithMany("FailedLoginAttempts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_FailedLoginAttempts_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanManager.Models.Gasto", b =>
                {
                    b.HasOne("FinanManager.Models.Role", "Role")
                        .WithMany("Gastos")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Gasto_Roles");

                    b.HasOne("FinanManager.Models.StatusPresupuesto", "Status")
                        .WithMany("Gastos")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Gasto_Status");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("FinanManager.Models.Notification", b =>
                {
                    b.HasOne("FinanManager.Models.Role", "Role")
                        .WithMany("Notifications")
                        .HasForeignKey("role_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Notifications_Roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinanManager.Models.Presupuesto", b =>
                {
                    b.HasOne("FinanManager.Models.User", "CreatedByNavigation")
                        .WithMany("Presupuestos")
                        .HasForeignKey("CreatedByNavigationUsers_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("FinanManager.Models.Proyecto", b =>
                {
                    b.HasOne("FinanManager.Models.Role", "Role")
                        .WithMany("Proyectos")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Proyectos_Roles");

                    b.HasOne("FinanManager.Models.StatusPresupuesto", "Status")
                        .WithMany("Proyectos")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Proyectos_Status");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("FinanManager.Models.User", b =>
                {
                    b.HasOne("FinanManager.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("role_ID")
                        .IsRequired()
                        .HasConstraintName("FK_Users_Roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FinanManager.Models.Role", b =>
                {
                    b.Navigation("AlertConfigs");

                    b.Navigation("Bienes");

                    b.Navigation("Gastos");

                    b.Navigation("Notifications");

                    b.Navigation("Proyectos");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FinanManager.Models.StatusPresupuesto", b =>
                {
                    b.Navigation("Bienes");

                    b.Navigation("Gastos");

                    b.Navigation("Proyectos");
                });

            modelBuilder.Entity("FinanManager.Models.User", b =>
                {
                    b.Navigation("Accountings");

                    b.Navigation("AuditLogs");

                    b.Navigation("FailedLoginAttempts");

                    b.Navigation("Presupuestos");
                });
#pragma warning restore 612, 618
        }
    }
}
